{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\nexport function _stakerPoints(instanceId, api) {\n  return memo(instanceId, function (accountId, eras, withActive) {\n    var stakerId = api.registry.createType('AccountId', accountId).toString();\n    return api.derive.staking._erasPoints(eras, withActive).pipe(map(function (points) {\n      return points.map(function (_ref) {\n        var era = _ref.era,\n            eraPoints = _ref.eraPoints,\n            validators = _ref.validators;\n        return {\n          era: era,\n          eraPoints: eraPoints,\n          points: validators[stakerId] || api.registry.createType('RewardPoint')\n        };\n      });\n    }));\n  });\n}\nexport function stakerPoints(instanceId, api) {\n  return memo(instanceId, function (accountId) {\n    var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(function (eras) {\n      return api.derive.staking._stakerPoints(accountId, eras, withActive);\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}