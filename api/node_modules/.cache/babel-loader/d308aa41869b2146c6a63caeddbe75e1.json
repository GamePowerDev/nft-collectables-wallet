{"ast":null,"code":"import _classCallCheck from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sanitize } from \"../create/sanitize.js\";\nimport { Text } from \"./Text.js\";\n/**\n * @name Type\n * @description\n * This is a extended version of String, specifically to handle types. Here we rely fully\n * on what string provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\n\nexport var Type = /*#__PURE__*/function (_Text) {\n  _inherits(Type, _Text);\n\n  var _super = _createSuper(Type);\n\n  function Type(registry) {\n    var _this;\n\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    _classCallCheck(this, Type);\n\n    _this = _super.call(this, registry, value);\n\n    _this.setOverride(sanitize(_this.toString()));\n\n    return _this;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  _createClass(Type, [{\n    key: \"toRawType\",\n    value: function toRawType() {\n      return 'Type';\n    }\n  }]);\n\n  return Type;\n}(Text);","map":null,"metadata":{},"sourceType":"module"}