{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\n\nfunction isEvent(event, sectionIndex, eventIndex) {\n  return event.index[0] === sectionIndex && event.index[1] === eventIndex;\n}\n/** @internal */\n\n\nexport function decorateEvents(_, _ref, metaVersion) {\n  var modules = _ref.modules;\n  return modules.filter(function (_ref2) {\n    var events = _ref2.events;\n    return events.isSome;\n  }).reduce(function (result, _ref3, _sectionIndex) {\n    var events = _ref3.events,\n        index = _ref3.index,\n        name = _ref3.name;\n    var sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = events.unwrap().reduce(function (newModule, meta, eventIndex) {\n      // we don't camelCase the event name\n      newModule[meta.name.toString()] = {\n        is: function is(eventRecord) {\n          return isEvent(eventRecord, sectionIndex, eventIndex);\n        },\n        meta: meta\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}","map":null,"metadata":{},"sourceType":"module"}