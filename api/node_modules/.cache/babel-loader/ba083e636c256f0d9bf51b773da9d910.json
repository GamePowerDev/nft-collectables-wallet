{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, stringCamelCase } from '@polkadot/util';\n\nfunction isTx(tx, callIndex) {\n  return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];\n}\n/** @internal */\n\n\nexport function createUnchecked(registry, section, callIndex, callMetadata) {\n  var expectedArgs = callMetadata.args;\n  var funcName = stringCamelCase(callMetadata.name);\n\n  var extrinsicFn = function extrinsicFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    assert(expectedArgs.length === args.length, \"Extrinsic \".concat(section, \".\").concat(funcName, \" expects \").concat(expectedArgs.length.valueOf(), \" arguments, got \").concat(args.length, \".\"));\n    return registry.createType('Call', {\n      args: args,\n      callIndex: callIndex\n    }, callMetadata);\n  };\n\n  extrinsicFn.is = function (tx) {\n    return isTx(tx, callIndex);\n  };\n\n  extrinsicFn.callIndex = callIndex;\n  extrinsicFn.meta = callMetadata;\n  extrinsicFn.method = funcName;\n  extrinsicFn.section = section;\n\n  extrinsicFn.toJSON = function () {\n    return callMetadata.toJSON();\n  };\n\n  return extrinsicFn;\n}","map":null,"metadata":{},"sourceType":"module"}