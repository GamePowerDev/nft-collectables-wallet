{"ast":null,"code":"import _classCallCheck from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from \"../codec/Struct.js\";\nimport { UNMASK_VERSION } from \"./constants.js\";\n/**\n * @name GenericExtrinsicUnknown\n * @description\n * A default handler for extrinsics where the version is not known (default throw)\n */\n\nexport var GenericExtrinsicUnknown = /*#__PURE__*/function (_Struct) {\n  _inherits(GenericExtrinsicUnknown, _Struct);\n\n  var _super = _createSuper(GenericExtrinsicUnknown);\n\n  function GenericExtrinsicUnknown(registry, value) {\n    var _this;\n\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref$isSigned = _ref.isSigned,\n        isSigned = _ref$isSigned === void 0 ? false : _ref$isSigned,\n        _ref$version = _ref.version,\n        version = _ref$version === void 0 ? 0 : _ref$version;\n\n    _classCallCheck(this, GenericExtrinsicUnknown);\n\n    _this = _super.call(this, registry, {});\n    throw new Error(\"Unsupported \".concat(isSigned ? '' : 'un', \"signed extrinsic version \").concat(version & UNMASK_VERSION));\n    return _this;\n  }\n\n  return GenericExtrinsicUnknown;\n}(Struct);","map":null,"metadata":{},"sourceType":"module"}