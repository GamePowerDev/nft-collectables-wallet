{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\n\nfunction parseFlags(address, _ref) {\n  var _ref2 = _slicedToArray(_ref, 5),\n      electionsMembers = _ref2[0],\n      councilMembers = _ref2[1],\n      technicalCommitteeMembers = _ref2[2],\n      societyMembers = _ref2[3],\n      sudoKey = _ref2[4];\n\n  var isIncluded = function isIncluded(id) {\n    return address ? id.toString() === address.toString() : false;\n  };\n\n  return {\n    isCouncil: ((electionsMembers === null || electionsMembers === void 0 ? void 0 : electionsMembers.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          id = _ref4[0];\n\n      return id;\n    })) || councilMembers || []).some(isIncluded),\n    isSociety: (societyMembers || []).some(isIncluded),\n    isSudo: (sudoKey === null || sudoKey === void 0 ? void 0 : sudoKey.toString()) === (address === null || address === void 0 ? void 0 : address.toString()),\n    isTechCommittee: (technicalCommitteeMembers || []).some(isIncluded)\n  };\n}\n/**\n * @name info\n * @description Returns account membership flags\n */\n\n\nexport function flags(instanceId, api) {\n  return memo(instanceId, function (address) {\n    var _api$query$councilSec, _api$query$council, _api$query$technicalC, _api$query$society, _api$query$sudo;\n\n    var councilSection = api.query.electionsPhragmen ? 'electionsPhragmen' : 'elections';\n    return combineLatest([address && (_api$query$councilSec = api.query[councilSection]) !== null && _api$query$councilSec !== void 0 && _api$query$councilSec.members ? api.query[councilSection].members() : of(undefined), address && (_api$query$council = api.query.council) !== null && _api$query$council !== void 0 && _api$query$council.members ? api.query.council.members() : of([]), address && (_api$query$technicalC = api.query.technicalCommittee) !== null && _api$query$technicalC !== void 0 && _api$query$technicalC.members ? api.query.technicalCommittee.members() : of([]), address && (_api$query$society = api.query.society) !== null && _api$query$society !== void 0 && _api$query$society.members ? api.query.society.members() : of([]), address && (_api$query$sudo = api.query.sudo) !== null && _api$query$sudo !== void 0 && _api$query$sudo.key ? api.query.sudo.key() : of(undefined)]).pipe(map(function (result) {\n      return parseFlags(address, result);\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}