{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { keccakAsU8a } from \"../keccak/index.js\";\nimport { secp256k1Expand } from \"../secp256k1/index.js\";\n\nfunction getH160(u8a) {\n  if ([33, 65].includes(u8a.length)) {\n    u8a = keccakAsU8a(secp256k1Expand(u8a));\n  }\n\n  return u8a.slice(-20);\n}\n\nexport function ethereumEncode(addressOrPublic) {\n  if (!addressOrPublic) {\n    return '0x';\n  }\n\n  var u8aAddress = u8aToU8a(addressOrPublic);\n  assert([20, 32, 33, 65].includes(u8aAddress.length), 'Invalid address or publicKey passed');\n  var address = u8aToHex(getH160(u8aAddress), -1, false);\n  var hash = u8aToHex(keccakAsU8a(address), -1, false);\n  var result = '';\n\n  for (var index = 0; index < 40; index++) {\n    result = \"\".concat(result).concat(parseInt(hash[index], 16) > 7 ? address[index].toUpperCase() : address[index]);\n  }\n\n  return \"0x\".concat(result);\n}","map":null,"metadata":{},"sourceType":"module"}