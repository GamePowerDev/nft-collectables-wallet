{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\nexport function _ownSlashes(instanceId, api) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return memo(instanceId, function (accountId, eras, _withActive) {\n    return eras.length ? api.queryMulti([].concat(_toConsumableArray(eras.map(function (era) {\n      return [api.query.staking.validatorSlashInEra, [era, accountId]];\n    })), _toConsumableArray(eras.map(function (era) {\n      return [api.query.staking.nominatorSlashInEra, [era, accountId]];\n    })))).pipe(map(function (values) {\n      return eras.map(function (era, index) {\n        return {\n          era: era,\n          total: values[index].isSome ? values[index].unwrap()[1] : values[index + eras.length].unwrapOrDefault()\n        };\n      });\n    })) : of([]);\n  });\n}\nexport function ownSlash(instanceId, api) {\n  return memo(instanceId, function (accountId, era) {\n    return api.derive.staking._ownSlashes(accountId, [era], true).pipe(map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          first = _ref2[0];\n\n      return first;\n    }));\n  });\n}\nexport function ownSlashes(instanceId, api) {\n  return memo(instanceId, function (accountId) {\n    var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return api.derive.staking.erasHistoric(withActive).pipe(switchMap(function (eras) {\n      return api.derive.staking._ownSlashes(accountId, eras, withActive);\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}