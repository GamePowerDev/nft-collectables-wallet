{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport \"./detectPackage.js\";\nimport { asmJsInit } from '@polkadot/wasm-crypto-asmjs';\nimport { wasmBytes } from '@polkadot/wasm-crypto-wasm';\nimport { allocString, allocU8a, getWasm, initWasm, resultString, resultU8a, withWasm } from \"./bridge.js\";\nimport * as imports from \"./imports.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nvar wasmPromise = initWasm(wasmBytes, asmJsInit, imports).catch(function () {\n  return null;\n});\nexport var bip39Generate = withWasm(function (wasm) {\n  return function (words) {\n    wasm.ext_bip39_generate(8, words);\n    return resultString();\n  };\n});\nexport var bip39ToEntropy = withWasm(function (wasm) {\n  return function (phrase) {\n    var _allocString = allocString(phrase),\n        _allocString2 = _slicedToArray(_allocString, 2),\n        ptr0 = _allocString2[0],\n        len0 = _allocString2[1];\n\n    wasm.ext_bip39_to_entropy(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var bip39ToMiniSecret = withWasm(function (wasm) {\n  return function (phrase, password) {\n    var _allocString3 = allocString(phrase),\n        _allocString4 = _slicedToArray(_allocString3, 2),\n        ptr0 = _allocString4[0],\n        len0 = _allocString4[1];\n\n    var _allocString5 = allocString(password),\n        _allocString6 = _slicedToArray(_allocString5, 2),\n        ptr1 = _allocString6[0],\n        len1 = _allocString6[1];\n\n    wasm.ext_bip39_to_mini_secret(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var bip39ToSeed = withWasm(function (wasm) {\n  return function (phrase, password) {\n    var _allocString7 = allocString(phrase),\n        _allocString8 = _slicedToArray(_allocString7, 2),\n        ptr0 = _allocString8[0],\n        len0 = _allocString8[1];\n\n    var _allocString9 = allocString(password),\n        _allocString10 = _slicedToArray(_allocString9, 2),\n        ptr1 = _allocString10[0],\n        len1 = _allocString10[1];\n\n    wasm.ext_bip39_to_seed(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var bip39Validate = withWasm(function (wasm) {\n  return function (phrase) {\n    var _allocString11 = allocString(phrase),\n        _allocString12 = _slicedToArray(_allocString11, 2),\n        ptr0 = _allocString12[0],\n        len0 = _allocString12[1];\n\n    var ret = wasm.ext_bip39_validate(ptr0, len0);\n    return ret !== 0;\n  };\n});\nexport var ed25519KeypairFromSeed = withWasm(function (wasm) {\n  return function (seed) {\n    var _allocU8a = allocU8a(seed),\n        _allocU8a2 = _slicedToArray(_allocU8a, 2),\n        ptr0 = _allocU8a2[0],\n        len0 = _allocU8a2[1];\n\n    wasm.ext_ed_from_seed(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var ed25519Sign = withWasm(function (wasm) {\n  return function (pubkey, seckey, message) {\n    var _allocU8a3 = allocU8a(pubkey),\n        _allocU8a4 = _slicedToArray(_allocU8a3, 2),\n        ptr0 = _allocU8a4[0],\n        len0 = _allocU8a4[1];\n\n    var _allocU8a5 = allocU8a(seckey),\n        _allocU8a6 = _slicedToArray(_allocU8a5, 2),\n        ptr1 = _allocU8a6[0],\n        len1 = _allocU8a6[1];\n\n    var _allocU8a7 = allocU8a(message),\n        _allocU8a8 = _slicedToArray(_allocU8a7, 2),\n        ptr2 = _allocU8a8[0],\n        len2 = _allocU8a8[1];\n\n    wasm.ext_ed_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n    return resultU8a();\n  };\n});\nexport var ed25519Verify = withWasm(function (wasm) {\n  return function (signature, message, pubkey) {\n    var _allocU8a9 = allocU8a(signature),\n        _allocU8a10 = _slicedToArray(_allocU8a9, 2),\n        ptr0 = _allocU8a10[0],\n        len0 = _allocU8a10[1];\n\n    var _allocU8a11 = allocU8a(message),\n        _allocU8a12 = _slicedToArray(_allocU8a11, 2),\n        ptr1 = _allocU8a12[0],\n        len1 = _allocU8a12[1];\n\n    var _allocU8a13 = allocU8a(pubkey),\n        _allocU8a14 = _slicedToArray(_allocU8a13, 2),\n        ptr2 = _allocU8a14[0],\n        len2 = _allocU8a14[1];\n\n    var ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n    return ret !== 0;\n  };\n});\nexport var sr25519DeriveKeypairHard = withWasm(function (wasm) {\n  return function (pair, cc) {\n    var _allocU8a15 = allocU8a(pair),\n        _allocU8a16 = _slicedToArray(_allocU8a15, 2),\n        ptr0 = _allocU8a16[0],\n        len0 = _allocU8a16[1];\n\n    var _allocU8a17 = allocU8a(cc),\n        _allocU8a18 = _slicedToArray(_allocU8a17, 2),\n        ptr1 = _allocU8a18[0],\n        len1 = _allocU8a18[1];\n\n    wasm.ext_sr_derive_keypair_hard(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var sr25519DeriveKeypairSoft = withWasm(function (wasm) {\n  return function (pair, cc) {\n    var _allocU8a19 = allocU8a(pair),\n        _allocU8a20 = _slicedToArray(_allocU8a19, 2),\n        ptr0 = _allocU8a20[0],\n        len0 = _allocU8a20[1];\n\n    var _allocU8a21 = allocU8a(cc),\n        _allocU8a22 = _slicedToArray(_allocU8a21, 2),\n        ptr1 = _allocU8a22[0],\n        len1 = _allocU8a22[1];\n\n    wasm.ext_sr_derive_keypair_soft(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var sr25519DerivePublicSoft = withWasm(function (wasm) {\n  return function (pubkey, cc) {\n    var _allocU8a23 = allocU8a(pubkey),\n        _allocU8a24 = _slicedToArray(_allocU8a23, 2),\n        ptr0 = _allocU8a24[0],\n        len0 = _allocU8a24[1];\n\n    var _allocU8a25 = allocU8a(cc),\n        _allocU8a26 = _slicedToArray(_allocU8a25, 2),\n        ptr1 = _allocU8a26[0],\n        len1 = _allocU8a26[1];\n\n    wasm.ext_sr_derive_public_soft(8, ptr0, len0, ptr1, len1);\n    return resultU8a();\n  };\n});\nexport var sr25519KeypairFromSeed = withWasm(function (wasm) {\n  return function (seed) {\n    var _allocU8a27 = allocU8a(seed),\n        _allocU8a28 = _slicedToArray(_allocU8a27, 2),\n        ptr0 = _allocU8a28[0],\n        len0 = _allocU8a28[1];\n\n    wasm.ext_sr_from_seed(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var sr25519Sign = withWasm(function (wasm) {\n  return function (pubkey, secret, message) {\n    var _allocU8a29 = allocU8a(pubkey),\n        _allocU8a30 = _slicedToArray(_allocU8a29, 2),\n        ptr0 = _allocU8a30[0],\n        len0 = _allocU8a30[1];\n\n    var _allocU8a31 = allocU8a(secret),\n        _allocU8a32 = _slicedToArray(_allocU8a31, 2),\n        ptr1 = _allocU8a32[0],\n        len1 = _allocU8a32[1];\n\n    var _allocU8a33 = allocU8a(message),\n        _allocU8a34 = _slicedToArray(_allocU8a33, 2),\n        ptr2 = _allocU8a34[0],\n        len2 = _allocU8a34[1];\n\n    wasm.ext_sr_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n    return resultU8a();\n  };\n});\nexport var sr25519Verify = withWasm(function (wasm) {\n  return function (signature, message, pubkey) {\n    var _allocU8a35 = allocU8a(signature),\n        _allocU8a36 = _slicedToArray(_allocU8a35, 2),\n        ptr0 = _allocU8a36[0],\n        len0 = _allocU8a36[1];\n\n    var _allocU8a37 = allocU8a(message),\n        _allocU8a38 = _slicedToArray(_allocU8a37, 2),\n        ptr1 = _allocU8a38[0],\n        len1 = _allocU8a38[1];\n\n    var _allocU8a39 = allocU8a(pubkey),\n        _allocU8a40 = _slicedToArray(_allocU8a39, 2),\n        ptr2 = _allocU8a40[0],\n        len2 = _allocU8a40[1];\n\n    var ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n    return ret !== 0;\n  };\n});\nexport var vrfSign = withWasm(function (wasm) {\n  return function (secret, context, message, extra) {\n    var _allocU8a41 = allocU8a(secret),\n        _allocU8a42 = _slicedToArray(_allocU8a41, 2),\n        ptr0 = _allocU8a42[0],\n        len0 = _allocU8a42[1];\n\n    var _allocU8a43 = allocU8a(context),\n        _allocU8a44 = _slicedToArray(_allocU8a43, 2),\n        ptr1 = _allocU8a44[0],\n        len1 = _allocU8a44[1];\n\n    var _allocU8a45 = allocU8a(message),\n        _allocU8a46 = _slicedToArray(_allocU8a45, 2),\n        ptr2 = _allocU8a46[0],\n        len2 = _allocU8a46[1];\n\n    var _allocU8a47 = allocU8a(extra),\n        _allocU8a48 = _slicedToArray(_allocU8a47, 2),\n        ptr3 = _allocU8a48[0],\n        len3 = _allocU8a48[1];\n\n    wasm.ext_vrf_sign(8, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return resultU8a();\n  };\n});\nexport var vrfVerify = withWasm(function (wasm) {\n  return function (pubkey, context, message, extra, outAndProof) {\n    var _allocU8a49 = allocU8a(pubkey),\n        _allocU8a50 = _slicedToArray(_allocU8a49, 2),\n        ptr0 = _allocU8a50[0],\n        len0 = _allocU8a50[1];\n\n    var _allocU8a51 = allocU8a(context),\n        _allocU8a52 = _slicedToArray(_allocU8a51, 2),\n        ptr1 = _allocU8a52[0],\n        len1 = _allocU8a52[1];\n\n    var _allocU8a53 = allocU8a(message),\n        _allocU8a54 = _slicedToArray(_allocU8a53, 2),\n        ptr2 = _allocU8a54[0],\n        len2 = _allocU8a54[1];\n\n    var _allocU8a55 = allocU8a(extra),\n        _allocU8a56 = _slicedToArray(_allocU8a55, 2),\n        ptr3 = _allocU8a56[0],\n        len3 = _allocU8a56[1];\n\n    var _allocU8a57 = allocU8a(outAndProof),\n        _allocU8a58 = _slicedToArray(_allocU8a57, 2),\n        ptr4 = _allocU8a58[0],\n        len4 = _allocU8a58[1];\n\n    var ret = wasm.ext_vrf_verify(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return ret !== 0;\n  };\n});\nexport var blake2b = withWasm(function (wasm) {\n  return function (data, key, size) {\n    var _allocU8a59 = allocU8a(data),\n        _allocU8a60 = _slicedToArray(_allocU8a59, 2),\n        ptr0 = _allocU8a60[0],\n        len0 = _allocU8a60[1];\n\n    var _allocU8a61 = allocU8a(key),\n        _allocU8a62 = _slicedToArray(_allocU8a61, 2),\n        ptr1 = _allocU8a62[0],\n        len1 = _allocU8a62[1];\n\n    wasm.ext_blake2b(8, ptr0, len0, ptr1, len1, size);\n    return resultU8a();\n  };\n});\nexport var keccak256 = withWasm(function (wasm) {\n  return function (data) {\n    var _allocU8a63 = allocU8a(data),\n        _allocU8a64 = _slicedToArray(_allocU8a63, 2),\n        ptr0 = _allocU8a64[0],\n        len0 = _allocU8a64[1];\n\n    wasm.ext_keccak256(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var pbkdf2 = withWasm(function (wasm) {\n  return function (data, salt, rounds) {\n    var _allocU8a65 = allocU8a(data),\n        _allocU8a66 = _slicedToArray(_allocU8a65, 2),\n        ptr0 = _allocU8a66[0],\n        len0 = _allocU8a66[1];\n\n    var _allocU8a67 = allocU8a(salt),\n        _allocU8a68 = _slicedToArray(_allocU8a67, 2),\n        ptr1 = _allocU8a68[0],\n        len1 = _allocU8a68[1];\n\n    wasm.ext_pbkdf2(8, ptr0, len0, ptr1, len1, rounds);\n    return resultU8a();\n  };\n});\nexport var scrypt = withWasm(function (wasm) {\n  return function (password, salt, log2n, r, p) {\n    var _allocU8a69 = allocU8a(password),\n        _allocU8a70 = _slicedToArray(_allocU8a69, 2),\n        ptr0 = _allocU8a70[0],\n        len0 = _allocU8a70[1];\n\n    var _allocU8a71 = allocU8a(salt),\n        _allocU8a72 = _slicedToArray(_allocU8a71, 2),\n        ptr1 = _allocU8a72[0],\n        len1 = _allocU8a72[1];\n\n    wasm.ext_scrypt(8, ptr0, len0, ptr1, len1, log2n, r, p);\n    return resultU8a();\n  };\n});\nexport var sha512 = withWasm(function (wasm) {\n  return function (data) {\n    var _allocU8a73 = allocU8a(data),\n        _allocU8a74 = _slicedToArray(_allocU8a73, 2),\n        ptr0 = _allocU8a74[0],\n        len0 = _allocU8a74[1];\n\n    wasm.ext_sha512(8, ptr0, len0);\n    return resultU8a();\n  };\n});\nexport var twox = withWasm(function (wasm) {\n  return function (data, rounds) {\n    var _allocU8a75 = allocU8a(data),\n        _allocU8a76 = _slicedToArray(_allocU8a75, 2),\n        ptr0 = _allocU8a76[0],\n        len0 = _allocU8a76[1];\n\n    wasm.ext_twox(8, ptr0, len0, rounds);\n    return resultU8a();\n  };\n});\nexport function isReady() {\n  return !!getWasm();\n}\nexport function waitReady() {\n  return wasmPromise.then(function () {\n    return isReady();\n  });\n}","map":null,"metadata":{},"sourceType":"module"}