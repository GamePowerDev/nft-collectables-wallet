{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, stringToU8a } from '@polkadot/util';\nimport { bip39ToMiniSecret, isReady } from '@polkadot/wasm-crypto';\nimport { pbkdf2Encode } from \"../pbkdf2/index.js\";\nimport { mnemonicToEntropy } from \"./toEntropy.js\";\nimport { mnemonicValidate } from \"./validate.js\";\nexport function mnemonicToMiniSecret(mnemonic) {\n  var password = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var onlyJs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  assert(mnemonicValidate(mnemonic), 'Invalid bip39 mnemonic specified');\n\n  if (isReady() && !onlyJs) {\n    return bip39ToMiniSecret(mnemonic, password);\n  }\n\n  var entropy = mnemonicToEntropy(mnemonic);\n  var salt = stringToU8a(\"mnemonic\".concat(password)); // return the first 32 bytes as the seed\n\n  return pbkdf2Encode(entropy, salt).password.slice(0, 32);\n}","map":null,"metadata":{},"sourceType":"module"}