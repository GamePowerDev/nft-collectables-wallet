{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\nexport function _members(instanceId, api) {\n  return memo(instanceId, function (accountIds) {\n    return combineLatest([of(accountIds), api.query.society.payouts.multi(accountIds), api.query.society.strikes.multi(accountIds), api.query.society.defenderVotes.multi(accountIds), api.query.society.suspendedMembers.multi(accountIds), api.query.society.vouching.multi(accountIds)]).pipe(map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 6),\n          accountIds = _ref2[0],\n          payouts = _ref2[1],\n          strikes = _ref2[2],\n          defenderVotes = _ref2[3],\n          suspended = _ref2[4],\n          vouching = _ref2[5];\n\n      return accountIds.map(function (accountId, index) {\n        return {\n          accountId: accountId,\n          isDefenderVoter: defenderVotes[index].isSome,\n          isSuspended: suspended[index].isTrue,\n          payouts: payouts[index],\n          strikes: strikes[index],\n          vote: defenderVotes[index].unwrapOr(undefined),\n          vouching: vouching[index].unwrapOr(undefined)\n        };\n      });\n    }));\n  });\n}\n/**\n * @description Get the member info for a society\n */\n\nexport function members(instanceId, api) {\n  return memo(instanceId, function () {\n    return api.query.society.members().pipe(switchMap(function (members) {\n      return api.derive.society._members(members);\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}