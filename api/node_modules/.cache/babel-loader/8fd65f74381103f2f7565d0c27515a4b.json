{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { keyExtractPath } from \"../key/index.js\";\nimport { schnorrkelDerivePublic } from \"../schnorrkel/index.js\";\nimport { decodeAddress } from \"./decode.js\";\nimport { encodeAddress } from \"./encode.js\";\n/**\n * @name deriveAddress\n * @summary Creates a sr25519 derived address from the supplied and path.\n * @description\n * Creates a sr25519 derived address based on the input address/publicKey and the uri supplied.\n */\n\nexport function deriveAddress(who, suri, ss58Format) {\n  var _keyExtractPath = keyExtractPath(suri),\n      path = _keyExtractPath.path;\n\n  assert(path.length && !path.some(function (path) {\n    return path.isHard;\n  }), 'Expected suri to contain a combination of non-hard paths');\n  return encodeAddress(path.reduce(function (publicKey, path) {\n    return schnorrkelDerivePublic(publicKey, path.chainCode);\n  }, decodeAddress(who)), ss58Format);\n}","map":null,"metadata":{},"sourceType":"module"}