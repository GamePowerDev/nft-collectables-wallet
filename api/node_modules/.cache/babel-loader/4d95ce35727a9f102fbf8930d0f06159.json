{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\n/**\n * @description Get the candidate info for a society\n */\n\nexport function candidates(instanceId, api) {\n  return memo(instanceId, function () {\n    return api.query.society.candidates().pipe(switchMap(function (candidates) {\n      return combineLatest([of(candidates), api.query.society.suspendedCandidates.multi(candidates.map(function (_ref) {\n        var who = _ref.who;\n        return who;\n      }))]);\n    }), map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          candidates = _ref3[0],\n          suspended = _ref3[1];\n\n      return candidates.map(function (_ref4, index) {\n        var kind = _ref4.kind,\n            value = _ref4.value,\n            who = _ref4.who;\n        return {\n          accountId: who,\n          isSuspended: suspended[index].isSome,\n          kind: kind,\n          value: value\n        };\n      });\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}