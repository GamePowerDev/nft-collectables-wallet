{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport BN from 'bn.js';\nimport { bnSqrt } from '@polkadot/util';\n\nfunction isOldInfo(info) {\n  return !!info.proposalHash;\n}\n\nfunction isCurrentStatus(status) {\n  return !!status.tally;\n}\n\nfunction isCurrentPreimage(api, imageOpt) {\n  return !!imageOpt && !api.query.democracy.dispatchQueue;\n}\n\nexport function compareRationals(n1, d1, n2, d2) {\n  while (true) {\n    var q1 = n1.div(d1);\n    var q2 = n2.div(d2);\n\n    if (q1.lt(q2)) {\n      return true;\n    } else if (q2.lt(q1)) {\n      return false;\n    }\n\n    var r1 = n1.mod(d1);\n    var r2 = n2.mod(d2);\n\n    if (r2.isZero()) {\n      return false;\n    } else if (r1.isZero()) {\n      return true;\n    }\n\n    n1 = d2;\n    n2 = d1;\n    d1 = r2;\n    d2 = r1;\n  }\n}\n\nfunction calcPassingOther(threshold, sqrtElectorate, _ref) {\n  var votedAye = _ref.votedAye,\n      votedNay = _ref.votedNay,\n      votedTotal = _ref.votedTotal;\n  var sqrtVoters = bnSqrt(votedTotal);\n  return sqrtVoters.isZero() ? false : threshold.isSupermajorityapproval ? compareRationals(votedNay, sqrtVoters, votedAye, sqrtElectorate) : compareRationals(votedNay, sqrtElectorate, votedAye, sqrtVoters);\n}\n\nexport function calcPassing(threshold, sqrtElectorate, state) {\n  return threshold.isSimplemajority ? state.votedAye.gt(state.votedNay) : calcPassingOther(threshold, sqrtElectorate, state);\n}\n\nfunction calcVotesPrev(votesFor) {\n  return votesFor.reduce(function (state, derived) {\n    var balance = derived.balance,\n        vote = derived.vote;\n    var isDefault = vote.conviction.index === 0;\n    var counted = balance.muln(isDefault ? 1 : vote.conviction.index).divn(isDefault ? 10 : 1);\n\n    if (vote.isAye) {\n      state.allAye.push(derived);\n      state.voteCountAye++;\n      state.votedAye.iadd(counted);\n    } else {\n      state.allNay.push(derived);\n      state.voteCountNay++;\n      state.votedNay.iadd(counted);\n    }\n\n    state.voteCount++;\n    state.votedTotal.iadd(counted);\n    return state;\n  }, {\n    allAye: [],\n    allNay: [],\n    voteCount: 0,\n    voteCountAye: 0,\n    voteCountNay: 0,\n    votedAye: new BN(0),\n    votedNay: new BN(0),\n    votedTotal: new BN(0)\n  });\n}\n\nfunction calcVotesCurrent(tally, votes) {\n  var allAye = [];\n  var allNay = [];\n  votes.forEach(function (derived) {\n    if (derived.vote.isAye) {\n      allAye.push(derived);\n    } else {\n      allNay.push(derived);\n    }\n  });\n  return {\n    allAye: allAye,\n    allNay: allNay,\n    voteCount: allAye.length + allNay.length,\n    voteCountAye: allAye.length,\n    voteCountNay: allNay.length,\n    votedAye: tally.ayes,\n    votedNay: tally.nays,\n    votedTotal: tally.turnout\n  };\n}\n\nexport function calcVotes(sqrtElectorate, referendum, votes) {\n  var state = isCurrentStatus(referendum.status) ? calcVotesCurrent(referendum.status.tally, votes) : calcVotesPrev(votes);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    isPassing: calcPassing(referendum.status.threshold, sqrtElectorate, state),\n    votes: votes\n  });\n}\nexport function getStatus(info) {\n  if (info.isNone) {\n    return null;\n  }\n\n  var unwrapped = info.unwrap();\n\n  if (isOldInfo(unwrapped)) {\n    return unwrapped;\n  } else if (unwrapped.isOngoing) {\n    return unwrapped.asOngoing;\n  } // done, we don't include it here... only currently active\n\n\n  return null;\n}\n\nfunction constructProposal(api, _ref2) {\n  var _ref3 = _slicedToArray(_ref2, 4),\n      bytes = _ref3[0],\n      proposer = _ref3[1],\n      balance = _ref3[2],\n      at = _ref3[3];\n\n  var proposal;\n\n  try {\n    proposal = api.registry.createType('Proposal', bytes.toU8a(true));\n  } catch (error) {\n    console.error(error);\n  }\n\n  return {\n    at: at,\n    balance: balance,\n    proposal: proposal,\n    proposer: proposer\n  };\n}\n\nexport function parseImage(api, imageOpt) {\n  if (imageOpt.isNone) {\n    return;\n  }\n\n  if (isCurrentPreimage(api, imageOpt)) {\n    var status = imageOpt.unwrap();\n\n    if (status.isMissing) {\n      return;\n    }\n\n    var _status$asAvailable = status.asAvailable,\n        data = _status$asAvailable.data,\n        deposit = _status$asAvailable.deposit,\n        provider = _status$asAvailable.provider,\n        since = _status$asAvailable.since;\n    return constructProposal(api, [data, provider, deposit, since]);\n  }\n\n  return constructProposal(api, imageOpt.unwrap());\n}","map":null,"metadata":{},"sourceType":"module"}