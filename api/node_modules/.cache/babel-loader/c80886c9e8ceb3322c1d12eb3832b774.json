{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport BN from 'bn.js';\nimport { assert, bnToU8a, isU8a } from '@polkadot/util';\nimport { secp256k1 } from \"./secp256k1.js\";\nvar ecparams = secp256k1.curve;\nexport function secp256k1PrivateKeyTweakAdd(seckey, tweak) {\n  assert(isU8a(seckey) && seckey.length === 32, 'Expected seckey to be an Uint8Array with length 32');\n  assert(isU8a(tweak) && tweak.length === 32, 'Expected tweak to be an Uint8Array with length 32');\n  var bn = new BN(tweak);\n  assert(bn.cmp(ecparams.n) < 0, 'Tweak parameter is out of range');\n  bn.iadd(new BN(seckey));\n\n  if (bn.cmp(ecparams.n) >= 0) {\n    bn.isub(ecparams.n);\n  }\n\n  assert(!bn.isZero(), 'Invalid resulting private key');\n  return bnToU8a(bn, {\n    bitLength: 256,\n    isLe: false\n  });\n}","map":null,"metadata":{},"sourceType":"module"}