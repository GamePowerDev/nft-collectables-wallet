{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\n\nfunction withImage(api, nextOpt) {\n  if (nextOpt.isNone) {\n    return of(null);\n  }\n\n  var _nextOpt$unwrap = nextOpt.unwrap(),\n      _nextOpt$unwrap2 = _slicedToArray(_nextOpt$unwrap, 2),\n      imageHash = _nextOpt$unwrap2[0],\n      threshold = _nextOpt$unwrap2[1];\n\n  return api.derive.democracy.preimage(imageHash).pipe(map(function (image) {\n    return {\n      image: image,\n      imageHash: imageHash,\n      threshold: threshold\n    };\n  }));\n}\n\nexport function nextExternal(instanceId, api) {\n  return memo(instanceId, function () {\n    var _api$query$democracy;\n\n    return (_api$query$democracy = api.query.democracy) !== null && _api$query$democracy !== void 0 && _api$query$democracy.nextExternal ? api.query.democracy.nextExternal().pipe(switchMap(function (nextOpt) {\n      return withImage(api, nextOpt);\n    })) : of(null);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}