{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { createSignedBlockExtended } from \"../type/index.js\";\nimport { memo } from \"../util/index.js\";\n/**\n * @name subscribeNewBlocks\n * @returns The latest block & events for that block\n */\n\nexport function subscribeNewBlocks(instanceId, api) {\n  return memo(instanceId, function () {\n    return api.derive.chain.subscribeNewHeads().pipe(switchMap(function (header) {\n      var blockHash = header.createdAtHash || header.hash;\n      return combineLatest(api.rpc.chain.getBlock(blockHash), api.query.system.events.at(blockHash), of(header));\n    }), map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 3),\n          block = _ref2[0],\n          events = _ref2[1],\n          header = _ref2[2];\n\n      return createSignedBlockExtended(block.registry, block, events, header.validators);\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}