{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction trimDocs(documentation) {\n  var strings = documentation.map(function (doc) {\n    return doc.toString().trim();\n  });\n  var firstEmpty = strings.findIndex(function (doc) {\n    return !doc.length;\n  });\n  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);\n}\n\nfunction mapCalls(registry, _calls) {\n  var calls = _calls.unwrapOr(null);\n\n  return registry.createType('Option<Vec<FunctionMetadataLatest>>', calls ? calls.map(function (_ref) {\n    var args = _ref.args,\n        documentation = _ref.documentation,\n        name = _ref.name;\n    return registry.createType('FunctionMetadataLatest', {\n      args: args,\n      documentation: trimDocs(documentation),\n      name: name\n    });\n  }) : null);\n}\n/** @internal */\n\n\nexport function toCallsOnly(registry, _ref2) {\n  var extrinsic = _ref2.extrinsic,\n      modules = _ref2.modules;\n  return registry.createType('MetadataLatest', {\n    extrinsic: extrinsic,\n    modules: modules.map(function (_ref3) {\n      var calls = _ref3.calls,\n          index = _ref3.index,\n          name = _ref3.name;\n      return {\n        calls: mapCalls(registry, calls),\n        index: index,\n        name: name\n      };\n    })\n  }).toJSON();\n}","map":null,"metadata":{},"sourceType":"module"}