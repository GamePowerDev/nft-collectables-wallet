{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { BASE58_ALPHABET } from \"./bs58.js\";\nvar BASE_CONFIG = {\n  alphabet: BASE58_ALPHABET,\n  ipfsChar: 'z',\n  type: 'base58'\n};\nexport function validateChars(_ref, value, ipfsCompat) {\n  var alphabet = _ref.alphabet,\n      ipfsChar = _ref.ipfsChar,\n      type = _ref.type;\n  assert(value, \"Expected non-null, non-empty \".concat(type, \" input\"));\n  assert(!ipfsCompat || value[0] === ipfsChar, \"Expected \".concat(type, \" to start with '\").concat(ipfsChar, \"'\"));\n\n  for (var i = ipfsCompat ? 1 : 0; i < value.length; i++) {\n    assert(alphabet.includes(value[i]), \"Invalid \".concat(type, \" character \\\"\").concat(value[i], \"\\\" (0x\").concat(value.charCodeAt(i).toString(16), \") at index \").concat(i));\n  }\n\n  return true;\n}\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58\n */\n\nexport function base58Validate(value, ipfsCompat) {\n  return validateChars(BASE_CONFIG, value, ipfsCompat);\n}","map":null,"metadata":{},"sourceType":"module"}