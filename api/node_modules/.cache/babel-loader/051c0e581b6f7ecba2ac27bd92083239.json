{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map } from '@polkadot/x-rxjs/operators';\nimport { createHeaderExtended } from \"../type/index.js\";\nimport { memo } from \"../util/index.js\";\n/**\n * @name subscribeNewHeads\n * @returns A header with the current header (including extracted author)\n * @description An observable of the current block header and it's author\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.subscribeNewHeads((header) => {\n *   console.log(`block #${header.number} was authored by ${header.author}`);\n * });\n * ```\n */\n\nexport function subscribeNewHeads(instanceId, api) {\n  return memo(instanceId, function () {\n    return combineLatest([api.rpc.chain.subscribeNewHeads(), api.query.session ? api.query.session.validators() : of(undefined)]).pipe(map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          header = _ref2[0],\n          validators = _ref2[1];\n\n      header.createdAtHash = header.hash;\n      return createHeaderExtended(header.registry, header, validators);\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}