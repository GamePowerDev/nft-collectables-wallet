{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport * as definitions from \"./definitions.js\";\nvar jsonrpc = {};\nObject.keys(definitions).filter(function (key) {\n  return Object.keys(definitions[key].rpc || {}).length !== 0;\n}).forEach(function (_section) {\n  jsonrpc[_section] = {};\n  Object.entries(definitions[_section].rpc).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        method = _ref2[0],\n        def = _ref2[1];\n\n    var isSubscription = !!def.pubsub;\n    var section = def.aliasSection || _section; // allow for section overrides\n\n    if (!jsonrpc[section]) {\n      jsonrpc[section] = {};\n    }\n\n    jsonrpc[section][method] = _objectSpread(_objectSpread({}, def), {}, {\n      isSubscription: isSubscription,\n      jsonrpc: \"\".concat(section, \"_\").concat(method),\n      method: method,\n      section: section\n    });\n  });\n});\nexport default jsonrpc;","map":null,"metadata":{},"sourceType":"module"}