{"ast":null,"code":"import _toConsumableArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { of } from '@polkadot/x-rxjs';\nimport { map } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\nexport function referendumIds(instanceId, api) {\n  return memo(instanceId, function () {\n    var _api$query$democracy;\n\n    return (_api$query$democracy = api.query.democracy) !== null && _api$query$democracy !== void 0 && _api$query$democracy.lowestUnbaked ? api.queryMulti([api.query.democracy.lowestUnbaked, api.query.democracy.referendumCount]).pipe(map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          first = _ref2[0],\n          total = _ref2[1];\n\n      return total.gt(first) // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ? _toConsumableArray(Array(total.sub(first).toNumber())).map(function (_, i) {\n        return first.addn(i);\n      }) : [];\n    })) : of([]);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}