{"ast":null,"code":"import _classCallCheck from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Struct } from '@polkadot/types/codec';\nimport { assert } from '@polkadot/util';\nimport { toV10 } from \"./v9/toV10.js\";\nimport { toV11 } from \"./v10/toV11.js\";\nimport { toV12 } from \"./v11/toV12.js\";\nimport { toLatest } from \"./v12/toLatest.js\";\nimport { MagicNumber } from \"./MagicNumber.js\";\nimport { getUniqTypes as _getUniqTypes, toCallsOnly } from \"./util/index.js\";\n\nvar _converted = _classPrivateFieldLooseKey(\"converted\");\n\nvar _assertVersion = _classPrivateFieldLooseKey(\"assertVersion\");\n\nvar _getVersion = _classPrivateFieldLooseKey(\"getVersion\");\n\nvar _metadata = _classPrivateFieldLooseKey(\"metadata\");\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\n\nexport var MetadataVersioned = /*#__PURE__*/function (_Struct) {\n  _inherits(MetadataVersioned, _Struct);\n\n  var _super = _createSuper(MetadataVersioned);\n\n  function MetadataVersioned(registry, value) {\n    var _this;\n\n    _classCallCheck(this, MetadataVersioned);\n\n    _this = _super.call(this, registry, {\n      magicNumber: MagicNumber,\n      metadata: 'MetadataAll'\n    }, value);\n    Object.defineProperty(_assertThisInitialized(_this), _converted, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _assertVersion, {\n      writable: true,\n      value: function value(version) {\n        assert(_this.version <= version, \"Cannot convert metadata from v\".concat(_this.version, \" to v\").concat(version));\n        return _this.version === version;\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _getVersion, {\n      writable: true,\n      value: function value(version, fromPrev) {\n        var asCurr = \"asV\".concat(version);\n        var asPrev = \"asV\".concat(version - 1);\n\n        if (_classPrivateFieldLooseBase(_assertThisInitialized(_this), _assertVersion)[_assertVersion](version)) {\n          return _classPrivateFieldLooseBase(_assertThisInitialized(_this), _metadata)[_metadata]()[asCurr];\n        }\n\n        if (!_classPrivateFieldLooseBase(_assertThisInitialized(_this), _converted)[_converted].has(version)) {\n          _classPrivateFieldLooseBase(_assertThisInitialized(_this), _converted)[_converted].set(version, fromPrev(_this.registry, _this[asPrev], _this.version));\n        }\n\n        return _classPrivateFieldLooseBase(_assertThisInitialized(_this), _converted)[_converted].get(version);\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _metadata, {\n      writable: true,\n      value: function value() {\n        return _this.get('metadata');\n      }\n    });\n    return _this;\n  }\n  /**\n   * @description Returns the wrapped metadata as a limited calls-only (latest) version\n   */\n\n\n  _createClass(MetadataVersioned, [{\n    key: \"asCallsOnly\",\n    get: function get() {\n      return new MetadataVersioned(this.registry, {\n        magicNumber: this.magicNumber,\n        metadata: this.registry.createType('MetadataAll', toCallsOnly(this.registry, this.asLatest), this.version)\n      });\n    }\n    /**\n     * @description Returns the wrapped metadata as a V9 object\n     */\n\n  }, {\n    key: \"asV9\",\n    get: function get() {\n      _classPrivateFieldLooseBase(this, _assertVersion)[_assertVersion](9);\n\n      return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().asV9;\n    }\n    /**\n     * @description Returns the wrapped values as a V10 object\n     */\n\n  }, {\n    key: \"asV10\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](10, toV10);\n    }\n    /**\n     * @description Returns the wrapped values as a V11 object\n     */\n\n  }, {\n    key: \"asV11\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](11, toV11);\n    }\n    /**\n     * @description Returns the wrapped values as a V12 object\n     */\n\n  }, {\n    key: \"asV12\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](12, toV12);\n    }\n    /**\n     * @description Returns the wrapped values as a latest version object\n     */\n\n  }, {\n    key: \"asLatest\",\n    get: function get() {\n      // This is non-existent & latest - applied here to do the module-specific type conversions\n      return _classPrivateFieldLooseBase(this, _getVersion)[_getVersion](13, toLatest);\n    }\n    /**\n     * @description\n     */\n\n  }, {\n    key: \"magicNumber\",\n    get: function get() {\n      return this.get('magicNumber');\n    }\n    /**\n     * @description the metadata version this structure represents\n     */\n\n  }, {\n    key: \"version\",\n    get: function get() {\n      return _classPrivateFieldLooseBase(this, _metadata)[_metadata]().index;\n    }\n  }, {\n    key: \"getUniqTypes\",\n    value: function getUniqTypes(throwError) {\n      return _getUniqTypes(this.registry, this.asLatest, throwError);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      // HACK(y): ensure that we apply the aliasses if we have not done so already, this is\n      // needed to ensure we have the overrides as intended (only applied in toLatest)\n      // eslint-disable-next-line no-unused-expressions\n      this.asLatest;\n      return _get(_getPrototypeOf(MetadataVersioned.prototype), \"toJSON\", this).call(this);\n    }\n  }]);\n\n  return MetadataVersioned;\n}(Struct);","map":null,"metadata":{},"sourceType":"module"}