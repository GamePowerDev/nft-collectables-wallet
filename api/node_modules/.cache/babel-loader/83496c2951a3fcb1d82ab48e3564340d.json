{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function extractAuthor(digest) {\n  var sessionValidators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var _digest$logs$filter = digest.logs.filter(function (_ref) {\n    var type = _ref.type;\n    return type === 'Consensus';\n  }),\n      _digest$logs$filter2 = _slicedToArray(_digest$logs$filter, 1),\n      citem = _digest$logs$filter2[0];\n\n  var _digest$logs$filter3 = digest.logs.filter(function (_ref2) {\n    var type = _ref2.type;\n    return type === 'PreRuntime';\n  }),\n      _digest$logs$filter4 = _slicedToArray(_digest$logs$filter3, 1),\n      pitem = _digest$logs$filter4[0];\n\n  var _digest$logs$filter5 = digest.logs.filter(function (_ref3) {\n    var type = _ref3.type;\n    return type === 'Seal';\n  }),\n      _digest$logs$filter6 = _slicedToArray(_digest$logs$filter5, 1),\n      sitem = _digest$logs$filter6[0];\n\n  var accountId; // This is critical to be first for BABE (before Consensus)\n  // If not first, we end up dropping the author at session-end\n\n  if (pitem) {\n    try {\n      var _pitem$asPreRuntime = _slicedToArray(pitem.asPreRuntime, 2),\n          engine = _pitem$asPreRuntime[0],\n          data = _pitem$asPreRuntime[1];\n\n      accountId = engine.extractAuthor(data, sessionValidators);\n    } catch (_unused) {// ignore\n    }\n  }\n\n  if (!accountId && citem) {\n    try {\n      var _citem$asConsensus = _slicedToArray(citem.asConsensus, 2),\n          _engine = _citem$asConsensus[0],\n          _data = _citem$asConsensus[1];\n\n      accountId = _engine.extractAuthor(_data, sessionValidators);\n    } catch (_unused2) {// ignore\n    }\n  } // SEAL, still used in e.g. Kulupu for pow\n\n\n  if (!accountId && sitem) {\n    try {\n      var _sitem$asSeal = _slicedToArray(sitem.asSeal, 2),\n          _engine2 = _sitem$asSeal[0],\n          _data2 = _sitem$asSeal[1];\n\n      accountId = _engine2.extractAuthor(_data2, sessionValidators);\n    } catch (_unused3) {// ignore\n    }\n  }\n\n  return accountId;\n}","map":null,"metadata":{},"sourceType":"module"}