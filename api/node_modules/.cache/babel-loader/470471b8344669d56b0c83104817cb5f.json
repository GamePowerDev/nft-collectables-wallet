{"ast":null,"code":"import _classCallCheck from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isBoolean, isNumber, isU8a, isUndefined } from '@polkadot/util';\nimport { U8aFixed } from \"../codec/U8aFixed.js\";\nimport { bool as Bool } from \"../primitive/Bool.js\"; // For votes, the topmost bit indicated aye/nay, the lower bits indicate the conviction\n\nvar AYE_BITS = 128;\nvar NAY_BITS = 0;\nvar CON_MASK = 127;\nvar DEF_CONV = 0; // the default conviction, None\n\n/** @internal */\n\nfunction decodeVoteBool(value) {\n  return value ? new Uint8Array([AYE_BITS | DEF_CONV]) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteU8a(value) {\n  return value.length ? value.subarray(0, 1) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteType(registry, value) {\n  var vote = new Bool(registry, value.aye).isTrue ? AYE_BITS : NAY_BITS;\n  var conviction = registry.createType('Conviction', value.conviction || DEF_CONV);\n  return new Uint8Array([vote | conviction.index]);\n}\n/** @internal */\n\n\nfunction decodeVote(registry, value) {\n  if (isUndefined(value) || value instanceof Boolean || isBoolean(value)) {\n    return decodeVoteBool(new Bool(registry, value).isTrue);\n  } else if (isNumber(value)) {\n    return decodeVoteBool(value < 0);\n  } else if (isU8a(value)) {\n    return decodeVoteU8a(value);\n  }\n\n  return decodeVoteType(registry, value);\n}\n/**\n * @name GenericVote\n * @description\n * A number of lock periods, plus a vote, one way or the other.\n */\n\n\nexport var GenericVote = /*#__PURE__*/function (_U8aFixed) {\n  _inherits(GenericVote, _U8aFixed);\n\n  var _super = _createSuper(GenericVote);\n\n  function GenericVote(registry, value) {\n    var _this;\n\n    _classCallCheck(this, GenericVote);\n\n    // decoded is just 1 byte\n    // Aye: Most Significant Bit\n    // Conviction: 0000 - 0101\n    var decoded = decodeVote(registry, value);\n    _this = _super.call(this, registry, decoded, 8);\n    _this._aye = void 0;\n    _this._conviction = void 0;\n    _this._aye = (decoded[0] & AYE_BITS) === AYE_BITS;\n    _this._conviction = _this.registry.createType('Conviction', decoded[0] & CON_MASK);\n    return _this;\n  }\n  /**\n   * @description returns a V2 conviction\n   */\n\n\n  _createClass(GenericVote, [{\n    key: \"conviction\",\n    get: function get() {\n      return this._conviction;\n    }\n    /**\n     * @description true if the wrapped value is a positive vote\n     */\n\n  }, {\n    key: \"isAye\",\n    get: function get() {\n      return this._aye;\n    }\n    /**\n     * @description true if the wrapped value is a negative vote\n     */\n\n  }, {\n    key: \"isNay\",\n    get: function get() {\n      return !this.isAye;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n\n  }, {\n    key: \"toHuman\",\n    value: function toHuman(isExpanded) {\n      return {\n        conviction: this.conviction.toHuman(isExpanded),\n        vote: this.isAye ? 'Aye' : 'Nay'\n      };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return 'Vote';\n    }\n  }]);\n\n  return GenericVote;\n}(U8aFixed);","map":null,"metadata":{},"sourceType":"module"}