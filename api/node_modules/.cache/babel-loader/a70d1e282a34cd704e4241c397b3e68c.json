{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport function approvalFlagsToBools(flags) {\n  var bools = [];\n  flags.forEach(function (flag) {\n    var str = flag.toString(2); // read from lowest bit to highest\n\n    var _iterator = _createForOfIteratorHelper(str.split('').reverse()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var bit = _step.value;\n        bools.push(!!parseInt(bit, 10));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }); // slice off trailing \"false\" values, as in substrate\n\n  var lastApproval = bools.lastIndexOf(true);\n  return lastApproval >= 0 ? bools.slice(0, lastApproval + 1) : [];\n}","map":null,"metadata":{},"sourceType":"module"}