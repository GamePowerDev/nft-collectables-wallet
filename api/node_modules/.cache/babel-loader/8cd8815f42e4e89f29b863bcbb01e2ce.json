{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n\n\nvar xcm = {\n  XcmAssetEffects: {\n    assets: 'Vec<MultiAsset>',\n    effects: 'Vec<XcmOrder>'\n  },\n  XcmWithdrawAsset: 'XcmAssetEffects',\n  XcmReserveAssetDeposit: 'XcmAssetEffects',\n  XcmTeleportAsset: 'XcmAssetEffects',\n  XcmQueryResponse: {\n    queryId: 'Compact<u64>',\n    response: 'XcmResponse'\n  },\n  XcmTransferAsset: {\n    assets: 'Vec<MultiAsset>',\n    dest: 'MultiLocation'\n  },\n  XcmTransferReserveAsset: {\n    assets: 'Vec<MultiAsset>',\n    dest: 'MultiLocation',\n    effects: 'Vec<XcmOrder>'\n  },\n  XcmTransact: {\n    originType: 'XcmOriginKind',\n    requireWeightAtMost: 'u64',\n    call: 'DoubleEncodedCall'\n  },\n  XcmHrmpNewChannelOpenRequest: {\n    sender: 'Compact<u32>',\n    maxMessageSize: 'Compact<u32>',\n    maxCapacity: 'Compact<u32>'\n  },\n  XcmHrmpChannelAccepted: {\n    recipient: 'Compact<u32>'\n  },\n  XcmHrmpChannelClosing: {\n    initiator: 'Compact<u32>',\n    sender: 'Compact<u32>',\n    recipient: 'Compact<u32>'\n  },\n  XcmRelayedFrom: {\n    who: 'MultiLocation',\n    message: 'Xcm'\n  },\n  Xcm: {\n    _enum: {\n      WithdrawAsset: 'XcmWithdrawAsset',\n      ReserveAssetDeposit: 'XcmReserveAssetDeposit',\n      TeleportAsset: 'XcmTeleportAsset',\n      QueryResponse: 'XcmQueryResponse',\n      TransferAsset: 'XcmTransferAsset',\n      TransferReserveAsset: 'XcmTransferReserveAsset',\n      Transact: 'XcmTransact',\n      HrmpNewChannelOpenRequest: 'XcmHrmpNewChannelOpenRequest',\n      HrmpChannelAccepted: 'XcmHrmpChannelAccepted',\n      HrmpChannelClosing: 'XcmHrmpChannelClosing',\n      RelayedFrom: 'XcmRelayedFrom'\n    }\n  },\n  VersionedXcm: {\n    _enum: {\n      V0: 'Xcm'\n    }\n  }\n};\nvar xmcOrder = {\n  XcmOrderDepositAsset: {\n    assets: 'Vec<MultiAsset>',\n    dest: 'MultiLocation'\n  },\n  XcmOrderDepositReserveAsset: {\n    assets: 'Vec<MultiAsset>',\n    dest: 'MultiLocation',\n    effects: 'Vec<XcmOrder>'\n  },\n  XcmOrderExchangeAsset: {\n    give: 'Vec<MultiAsset>',\n    receive: 'Vec<MultiAsset>'\n  },\n  XcmOrderInitiateReserveWithdraw: {\n    assets: 'Vec<MultiAsset>',\n    reserve: 'MultiLocation',\n    effects: 'Vec<XcmOrder>'\n  },\n  XcmOrderInitiateTeleport: {\n    assets: 'Vec<MultiAsset>',\n    dest: 'MultiLocation',\n    effects: 'Vec<XcmOrder>'\n  },\n  XcmOrderQueryHolding: {\n    queryId: 'Compact<u64>',\n    dest: 'MultiLocation',\n    assets: 'Vec<MultiAsset>'\n  },\n  XcmOrderBuyExecution: {\n    fees: 'MultiAsset',\n    weight: 'u64',\n    debt: 'u64',\n    haltOnError: 'bool',\n    xcm: 'Vec<Xcm>'\n  },\n  XcmOrder: {\n    _enum: {\n      Null: 'Null',\n      DepositAsset: 'XcmOrderDepositAsset',\n      DepositReserveAsset: 'XcmOrderDepositReserveAsset',\n      ExchangeAsset: 'XcmOrderExchangeAsset',\n      InitiateReserveWithdraw: 'XcmOrderInitiateReserveWithdraw',\n      InitiateTeleport: 'XcmOrderInitiateTeleport',\n      QueryHolding: 'XcmOrderQueryHolding',\n      BuyExecution: 'XcmOrderBuyExecution'\n    }\n  }\n};\nvar multiAsset = {\n  MultiAssetAbstractFungible: {\n    id: 'Vec<u8>',\n    instance: 'Compact<u128>'\n  },\n  MultiAssetAbstractNonFungible: {\n    class: 'Vec<u8>',\n    instance: 'AssetInstance'\n  },\n  MultiAssetConcreteFungible: {\n    id: 'MultiLocation',\n    amount: 'Compact<u128>'\n  },\n  MultiAssetConcreteNonFungible: {\n    class: 'MultiLocation',\n    instance: 'AssetInstance'\n  },\n  MultiAsset: {\n    _enum: {\n      None: 'Null',\n      All: 'Null',\n      AllFungible: 'Null',\n      AllNonFungible: 'Null',\n      AllAbstractFungible: 'Vec<u8>',\n      AllAbstractNonFungible: 'Vec<u8>',\n      AllConcreteFungible: 'MultiLocation',\n      AllConcreteNonFungible: 'MultiLocation',\n      AbstractFungible: 'MultiAssetAbstractFungible',\n      AbstractNonFungible: 'MultiAssetAbstractNonFungible',\n      ConcreteFungible: 'MultiAssetConcreteFungible',\n      ConcreteNonFungible: 'MultiAssetConcreteNonFungible'\n    }\n  },\n  VersionedMultiAsset: {\n    _enum: {\n      V0: 'MultiAsset'\n    }\n  }\n};\nexport default {\n  rpc: {},\n  types: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, multiAsset), xcm), xmcOrder), {}, {\n    DoubleEncodedCall: {\n      encoded: 'Vec<u8>'\n    },\n    NetworkId: {\n      _enum: {\n        Any: 'Null',\n        Named: 'Vec<u8>',\n        Polkadot: 'Null',\n        Kusama: 'Null'\n      }\n    },\n    XcmOriginKind: {\n      _enum: ['Native', 'SovereignAccount', 'Superuser']\n    },\n    XcmResponse: {\n      _enum: {\n        Assets: 'Vec<MultiAsset>'\n      }\n    },\n    XcmError: {\n      _enum: {\n        Undefined: 'Null',\n        Overflow: 'Null',\n        Unimplemented: 'Null',\n        UnhandledXcmVersion: 'Null',\n        UnhandledXcmMessage: 'Null',\n        UnhandledEffect: 'Null',\n        EscalationOfPrivilege: 'Null',\n        UntrustedReserveLocation: 'Null',\n        UntrustedTeleportLocation: 'Null',\n        DestinationBufferOverflow: 'Null',\n        SendFailed: 'Null',\n        // (#[codec(skip)] &'static str),\n        CannotReachDestination: '(MultiLocation, Xcm)',\n        MultiLocationFull: 'Null',\n        FailedToDecode: 'Null',\n        BadOrigin: 'Null',\n        ExceedsMaxMessageSize: 'Null',\n        FailedToTransactAsset: 'Null',\n        // (#[codec(skip)] &'static str),\n        WeightLimitReached: 'Null',\n        Wildcard: 'Null',\n        TooMuchWeightRequired: 'Null',\n        NotHoldingFees: 'Null',\n        WeightNotComputable: 'Null',\n        Barrier: 'Null',\n        NotWithdrawable: 'Null',\n        LocationCannotHold: 'Null'\n      }\n    },\n    XcmOutcome: {\n      _enum: {\n        Complete: 'Weight',\n        Incomplete: '(Weight, XcmError)',\n        Error: 'XcmError'\n      }\n    },\n    MultiLocation: {\n      _enum: {\n        Null: 'Null',\n        X1: 'Junction',\n        X2: '(Junction, Junction)',\n        X3: '(Junction, Junction, Junction)',\n        X4: '(Junction, Junction, Junction, Junction)',\n        X5: '(Junction, Junction, Junction, Junction, Junction)',\n        X6: '(Junction, Junction, Junction, Junction, Junction, Junction)',\n        X7: '(Junction, Junction, Junction, Junction, Junction, Junction, Junction)',\n        X8: '(Junction, Junction, Junction, Junction, Junction, Junction, Junction, Junction)'\n      }\n    },\n    AccountId32Junction: {\n      network: 'NetworkId',\n      id: 'AccountId'\n    },\n    AccountIndex64Junction: {\n      network: 'NetworkId',\n      index: 'Compact<u64>'\n    },\n    AccountKey20Junction: {\n      network: 'NetworkId',\n      index: '[u8; 20]'\n    },\n    Junction: {\n      _enum: {\n        Parent: 'Null',\n        Parachain: 'Compact<u32>',\n        AccountId32: 'AccountId32Junction',\n        AccountIndex64: 'AccountIndex64Junction',\n        AccountKey20: 'AccountKey20Junction',\n        PalletInstance: 'u8',\n        GeneralIndex: 'Compact<u128>',\n        GeneralKey: 'Vec<u8>',\n        OnlyChild: 'Null'\n      }\n    },\n    VersionedMultiLocation: {\n      _enum: {\n        V0: 'MultiLocation'\n      }\n    },\n    AssetInstance: {\n      _enum: {\n        Undefined: 'Null',\n        Index8: 'u8',\n        Index16: 'Compact<u16>',\n        Index32: 'Compact<u32>',\n        Index64: 'Compact<u64>',\n        Index128: 'Compact<u128>',\n        Array4: '[u8; 4]',\n        Array8: '[u8; 8]',\n        Array16: '[u8; 16]',\n        Array32: '[u8; 32]',\n        Blob: 'Vec<u8>'\n      }\n    }\n  })\n};","map":null,"metadata":{},"sourceType":"module"}