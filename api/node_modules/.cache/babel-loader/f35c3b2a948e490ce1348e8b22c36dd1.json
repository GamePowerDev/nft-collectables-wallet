{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport BN from 'bn.js';\nimport networks from '@polkadot/networks';\nimport { assert, hexToU8a } from '@polkadot/util';\nimport kusama from \"./kusama.js\";\nimport polkadot from \"./polkadot.js\";\nimport westend from \"./westend.js\"; // testnets are not available in the networks map\n\nvar NET_EXTRA = {\n  westend: {\n    genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']\n  }\n};\n/** @internal */\n\nfunction checkOrder(network, versions) {\n  var ooo = versions.filter(function (curr, index) {\n    var prev = versions[index - 1];\n    return index === 0 ? false : curr[0] <= prev[0] || curr[1] <= prev[1];\n  });\n  assert(!ooo.length, \"\".concat(network, \": Mismatched upgrade ordering: \").concat(JSON.stringify(ooo)));\n  return versions;\n}\n/** @internal */\n\n\nfunction mapRaw(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      network = _ref2[0],\n      versions = _ref2[1];\n\n  var chain = networks.find(function (n) {\n    return n.network === network;\n  }) || NET_EXTRA[network];\n  assert(chain, \"Unable to find info for chain \".concat(network));\n  return {\n    genesisHash: hexToU8a(chain.genesisHash[0]),\n    network: network,\n    versions: checkOrder(network, versions).map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          blockNumber = _ref4[0],\n          specVersion = _ref4[1];\n\n      return {\n        blockNumber: new BN(blockNumber),\n        specVersion: new BN(specVersion)\n      };\n    })\n  };\n} // Type overrides for specific spec types & versions as given in runtimeVersion\n\n\nvar upgrades = Object.entries({\n  kusama: kusama,\n  polkadot: polkadot,\n  westend: westend\n}).map(mapRaw);\nexport default upgrades;","map":null,"metadata":{},"sourceType":"module"}