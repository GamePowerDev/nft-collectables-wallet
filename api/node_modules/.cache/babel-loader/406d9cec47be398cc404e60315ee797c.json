{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, bnToU8a, u8aConcat } from '@polkadot/util';\nimport { secp256k1Hasher } from \"./hasher.js\";\nimport { EXPAND_OPT, secp256k1 } from \"./secp256k1.js\";\n/**\n * @name secp256k1Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\n\nexport function secp256k1Sign(message, _ref) {\n  var secretKey = _ref.secretKey;\n  var hashType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'blake2';\n  assert((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 32, 'Expected valid secp256k1 secretKey, 32-bytes');\n  var key = secp256k1.keyFromPrivate(secretKey);\n  var ecsig = key.sign(secp256k1Hasher(hashType, message));\n  return u8aConcat(bnToU8a(ecsig.r, EXPAND_OPT), bnToU8a(ecsig.s, EXPAND_OPT), new Uint8Array([ecsig.recoveryParam || 0]));\n}","map":null,"metadata":{},"sourceType":"module"}