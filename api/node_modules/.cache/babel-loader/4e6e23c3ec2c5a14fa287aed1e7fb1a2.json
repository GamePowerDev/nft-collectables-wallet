{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToString } from '@polkadot/util';\nimport { combineLatest, of } from '@polkadot/x-rxjs';\nimport { map, switchMap } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\n\nfunction retrieveNick(api, accountId) {\n  var _api$query$nicks;\n\n  return (accountId && (_api$query$nicks = api.query.nicks) !== null && _api$query$nicks !== void 0 && _api$query$nicks.nameOf ? api.query.nicks.nameOf(accountId) : of(undefined)).pipe(map(function (nameOf) {\n    return nameOf !== null && nameOf !== void 0 && nameOf.isSome ? u8aToString(nameOf.unwrap()[0]).substr(0, api.consts.nicks.maxLength.toNumber()) : undefined;\n  }));\n}\n/**\n * @name info\n * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname\n */\n\n\nexport function info(instanceId, api) {\n  return memo(instanceId, function (address) {\n    return api.derive.accounts.idAndIndex(address).pipe(switchMap(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          accountId = _ref2[0],\n          accountIndex = _ref2[1];\n\n      return combineLatest([of({\n        accountId: accountId,\n        accountIndex: accountIndex\n      }), api.derive.accounts.identity(accountId), retrieveNick(api, accountId)]);\n    }), map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          _ref4$ = _ref4[0],\n          accountId = _ref4$.accountId,\n          accountIndex = _ref4$.accountIndex,\n          identity = _ref4[1],\n          nickname = _ref4[2];\n\n      return {\n        accountId: accountId,\n        accountIndex: accountIndex,\n        identity: identity,\n        nickname: nickname\n      };\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}