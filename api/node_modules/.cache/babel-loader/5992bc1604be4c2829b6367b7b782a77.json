{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isNull } from '@polkadot/util';\nimport { keyExtractPath } from \"./extractPath.js\";\nvar RE_CAPTURE = /^(\\w+( \\w+)*)((\\/\\/?[^/]+)*)(\\/\\/\\/(.*))?$/;\n/**\n * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n */\n\nexport function keyExtractSuri(suri) {\n  // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n  var matches = suri.match(RE_CAPTURE);\n  assert(!isNull(matches), 'Unable to match provided value to a secret URI');\n\n  var _matches = _slicedToArray(matches, 7),\n      phrase = _matches[1],\n      derivePath = _matches[3],\n      password = _matches[6];\n\n  var _keyExtractPath = keyExtractPath(derivePath),\n      path = _keyExtractPath.path;\n\n  return {\n    derivePath: derivePath,\n    password: password,\n    path: path,\n    phrase: phrase\n  };\n}","map":null,"metadata":{},"sourceType":"module"}