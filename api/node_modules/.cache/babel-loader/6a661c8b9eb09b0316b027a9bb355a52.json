{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat } from '@polkadot/util';\nimport { secp256k1Hasher } from \"../secp256k1/hasher.js\";\nimport { encodeAddress } from \"./encode.js\";\n/**\n * @name evmToAddress\n * @summary Converts an EVM address to its corresponding SS58 address.\n */\n\nexport function evmToAddress(evmAddress, ss58Format) {\n  var hashType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'blake2';\n\n  var wrapError = function wrapError(message) {\n    return \"Converting \".concat(evmAddress, \": \").concat(message);\n  };\n\n  var message = u8aConcat('evm:', evmAddress);\n\n  if (message.length !== 24) {\n    throw new Error(wrapError('Invalid evm address length'));\n  }\n\n  var address = secp256k1Hasher(hashType, message);\n  return encodeAddress(address, ss58Format);\n}","map":null,"metadata":{},"sourceType":"module"}