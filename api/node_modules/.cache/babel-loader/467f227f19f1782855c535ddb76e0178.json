{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\nexport function erasHistoric(instanceId, api) {\n  return memo(instanceId, function (withActive) {\n    return api.queryMulti([api.query.staking.activeEra, api.query.staking.historyDepth]).pipe(map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          activeEraOpt = _ref2[0],\n          historyDepth = _ref2[1];\n\n      var result = [];\n      var max = historyDepth.toNumber();\n      var activeEra = activeEraOpt.unwrapOrDefault().index;\n      var lastEra = activeEra;\n\n      while (lastEra.gten(0) && result.length < max) {\n        if (lastEra !== activeEra || withActive === true) {\n          result.push(api.registry.createType('EraIndex', lastEra));\n        }\n\n        lastEra = lastEra.subn(1);\n      } // go from oldest to newest\n\n\n      return result.reverse();\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}