{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\n\nfunction isError(_ref, sectionIndex, errorIndex) {\n  var error = _ref.error,\n      index = _ref.index;\n  return index.eq(sectionIndex) && error.eq(errorIndex);\n}\n/** @internal */\n\n\nexport function decorateErrors(_, _ref2, metaVersion) {\n  var modules = _ref2.modules;\n  return modules.reduce(function (result, _ref3, _sectionIndex) {\n    var errors = _ref3.errors,\n        index = _ref3.index,\n        name = _ref3.name;\n\n    if (!errors.length) {\n      return result;\n    }\n\n    var sectionIndex = metaVersion >= 12 ? index.toNumber() : _sectionIndex;\n    result[stringCamelCase(name)] = errors.reduce(function (newModule, meta, errorIndex) {\n      // we don't camelCase the error name\n      newModule[meta.name.toString()] = {\n        is: function is(moduleError) {\n          return isError(moduleError, sectionIndex, errorIndex);\n        },\n        meta: meta\n      };\n      return newModule;\n    }, {});\n    return result;\n  }, {});\n}","map":null,"metadata":{},"sourceType":"module"}