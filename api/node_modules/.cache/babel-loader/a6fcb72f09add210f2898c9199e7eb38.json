{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { map, startWith, switchMap } from '@polkadot/x-rxjs/operators';\nimport { drr, memo } from \"../util/index.js\";\n\nfunction onBondedEvent(api) {\n  var current = Date.now();\n  return api.query.system.events().pipe(map(function (events) {\n    current = events.filter(function (_ref) {\n      var event = _ref.event,\n          phase = _ref.phase;\n\n      try {\n        return phase.isApplyExtrinsic && event.section === 'staking' && event.method === 'Bonded';\n      } catch (_unused) {\n        return false;\n      }\n    }) ? Date.now() : current;\n    return current;\n  }), startWith(current), drr({\n    skipTimeout: true\n  }));\n}\n/**\n * @description Retrieve the list of all validator stashes\n */\n\n\nexport function stashes(instanceId, api) {\n  return memo(instanceId, function () {\n    return onBondedEvent(api).pipe(switchMap(function () {\n      return api.query.staking.validators.keys();\n    }), map(function (keys) {\n      return keys.map(function (_ref2) {\n        var _ref2$args = _slicedToArray(_ref2.args, 1),\n            validatorId = _ref2$args[0];\n\n        return validatorId;\n      }).filter(function (a) {\n        return a;\n      });\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}