{"ast":null,"code":"// Copyright 2017-2021 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { knownGenesis, knownIcon, knownLedger, knownTestnet } from \"./defaults.js\";\nimport { knownSubstrate } from \"./substrate.js\";\nexport { packageInfo } from \"./packageInfo.js\"; // These are known prefixes that are not sorted\n\nvar UNSORTED = [0, 2, 42];\nexport var all = knownSubstrate.map(function (o) {\n  var network = o.network || '';\n  var n = o;\n  n.slip44 = knownLedger[network];\n  n.hasLedgerSupport = !!n.slip44;\n  n.genesisHash = knownGenesis[network] || [];\n  n.icon = knownIcon[network] || 'substrate';\n  n.isIgnored = !network || !!knownTestnet[network] || network.startsWith('reserved');\n  return n;\n}); // The list of available/claimed prefixes\n//   - no testnets\n//   - we only include those where we have a standardAccount\n//   - when no icon has been specified, default to substrate\n//   - sort by name, however we keep 0, 2, 42 first in the list\n\nexport var available = all.filter(function (n) {\n  return !n.isIgnored && !!n.network;\n}).sort(function (a, b) {\n  return UNSORTED.includes(a.prefix) === UNSORTED.includes(b.prefix) ? 0 : UNSORTED.includes(a.prefix) ? -1 : UNSORTED.includes(b.prefix) ? 1 : a.displayName.localeCompare(b.displayName);\n}); // A filtered list of those chains we have details about (genesisHashes)\n\nexport default available.filter(function (n) {\n  return n.genesisHash.length || n.prefix === 42;\n});","map":null,"metadata":{},"sourceType":"module"}