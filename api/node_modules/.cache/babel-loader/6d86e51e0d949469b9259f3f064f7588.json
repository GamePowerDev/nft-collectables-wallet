{"ast":null,"code":"import _classCallCheck from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\"; // Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { extractAuthor } from \"./util.js\";\n\nfunction mapExtrinsics(extrinsics, records) {\n  return extrinsics.map(function (extrinsic, index) {\n    var dispatchError;\n    var dispatchInfo;\n    var events = records.filter(function (_ref) {\n      var phase = _ref.phase;\n      return phase.isApplyExtrinsic && phase.asApplyExtrinsic.eq(index);\n    }).map(function (_ref2) {\n      var event = _ref2.event;\n\n      if (event.section === 'system') {\n        if (event.method === 'ExtrinsicSuccess') {\n          dispatchInfo = event.data[0];\n        } else if (event.method === 'ExtrinsicFailed') {\n          dispatchError = event.data[0];\n          dispatchInfo = event.data[1];\n        }\n      }\n\n      return event;\n    });\n    return {\n      dispatchError: dispatchError,\n      dispatchInfo: dispatchInfo,\n      events: events,\n      extrinsic: extrinsic\n    };\n  });\n}\n\nexport function createSignedBlockExtended(registry, block, events, validators) {\n  // an instance of the base extrinsic for us to extend\n  var SignedBlockBase = registry.createClass('SignedBlock');\n\n  var _author = _classPrivateFieldLooseKey(\"author\");\n\n  var _events = _classPrivateFieldLooseKey(\"events\");\n\n  var _extrinsics = _classPrivateFieldLooseKey(\"extrinsics\");\n\n  var Implementation = /*#__PURE__*/function (_SignedBlockBase) {\n    _inherits(Implementation, _SignedBlockBase);\n\n    var _super = _createSuper(Implementation);\n\n    function Implementation(registry, block, events, validators) {\n      var _this;\n\n      _classCallCheck(this, Implementation);\n\n      _this = _super.call(this, registry, block);\n      Object.defineProperty(_assertThisInitialized(_this), _author, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _events, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(_assertThisInitialized(_this), _extrinsics, {\n        writable: true,\n        value: void 0\n      });\n      _classPrivateFieldLooseBase(_assertThisInitialized(_this), _author)[_author] = extractAuthor(_this.block.header.digest, validators);\n      _classPrivateFieldLooseBase(_assertThisInitialized(_this), _events)[_events] = events || [];\n      _classPrivateFieldLooseBase(_assertThisInitialized(_this), _extrinsics)[_extrinsics] = mapExtrinsics(_this.block.extrinsics, _classPrivateFieldLooseBase(_assertThisInitialized(_this), _events)[_events]);\n      _this.createdAtHash = block === null || block === void 0 ? void 0 : block.createdAtHash;\n      return _this;\n    }\n    /**\n     * @description Convenience method, returns the author for the block\n     */\n\n\n    _createClass(Implementation, [{\n      key: \"author\",\n      get: function get() {\n        return _classPrivateFieldLooseBase(this, _author)[_author];\n      }\n      /**\n       * @description Convenience method, returns the events associated with the block\n       */\n\n    }, {\n      key: \"events\",\n      get: function get() {\n        return _classPrivateFieldLooseBase(this, _events)[_events];\n      }\n      /**\n       * @description Returns the extrinsics and their events, mapped\n       */\n\n    }, {\n      key: \"extrinsics\",\n      get: function get() {\n        return _classPrivateFieldLooseBase(this, _extrinsics)[_extrinsics];\n      }\n    }]);\n\n    return Implementation;\n  }(SignedBlockBase);\n\n  return new Implementation(registry, block, events, validators);\n}","map":null,"metadata":{},"sourceType":"module"}