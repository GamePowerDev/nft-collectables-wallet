{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { l } from \"./logging.js\";\nexport function filterEvents(extHash, _ref, allEvents, status) {\n  var _ref$block = _ref.block,\n      extrinsics = _ref$block.extrinsics,\n      header = _ref$block.header;\n  // extrinsics to hashes\n  var myHash = extHash.toHex();\n  var allHashes = extrinsics.map(function (ext) {\n    return ext.hash.toHex();\n  }); // find the index of our extrinsic in the block\n\n  var index = allHashes.indexOf(myHash); // if we do get the block after finalized, it _should_ be there\n\n  if (index === -1) {\n    // only warn on filtering with isInBlock (finalization finalizes after)\n    if (status.isInBlock) {\n      l.warn(\"block \".concat(header.hash.toHex(), \": Unable to find extrinsic \").concat(myHash, \" inside \").concat(allHashes.join(', ')));\n    }\n\n    return;\n  }\n\n  return allEvents.filter(function (_ref2) {\n    var phase = _ref2.phase;\n    return (// only ApplyExtrinsic has the extrinsic index\n      phase.isApplyExtrinsic && phase.asApplyExtrinsic.eqn(index)\n    );\n  });\n}","map":null,"metadata":{},"sourceType":"module"}