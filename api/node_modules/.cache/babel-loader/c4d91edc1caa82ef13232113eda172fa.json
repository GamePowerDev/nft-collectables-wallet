{"ast":null,"code":"// Copyright 2017-2021 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bufferToU8a } from \"../buffer/toU8a.js\";\nimport { hexToU8a } from \"../hex/toU8a.js\";\nimport { isBuffer } from \"../is/buffer.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isString } from \"../is/string.js\";\nimport { stringToU8a } from \"../string/toU8a.js\";\n\nfunction convertArray(value) {\n  return Array.isArray(value) ? Uint8Array.from(value) : value;\n}\n\nfunction convertString(value) {\n  return isHex(value) ? hexToU8a(value) : stringToU8a(value);\n}\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\n\n\nexport function u8aToU8a(value) {\n  if (!value) {\n    return new Uint8Array();\n  } else if (isBuffer(value)) {\n    return bufferToU8a(value);\n  } else if (isString(value)) {\n    return convertString(value);\n  }\n\n  return convertArray(value);\n}","map":null,"metadata":{},"sourceType":"module"}