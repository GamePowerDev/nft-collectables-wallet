{"ast":null,"code":"// Copyright 2017-2021 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { logger } from '@polkadot/util';\nimport { catchError, distinctUntilChanged, publishReplay, refCount, tap } from '@polkadot/x-rxjs/operators';\nimport { refCountDelay } from \"./refCountDelay.js\";\nvar l = logger('drr');\n\nvar CMP = function CMP(a, b) {\n  return JSON.stringify({\n    t: a\n  }) === JSON.stringify({\n    t: b\n  });\n};\n\nvar ERR = function ERR(error) {\n  l.error(error);\n  throw error;\n};\n\nvar NOOP = function NOOP() {\n  return undefined;\n};\n/**\n * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().\n *\n * @ignore\n * @internal\n */\n\n\nexport var drr = function drr() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      delay = _ref.delay,\n      _ref$skipChange = _ref.skipChange,\n      skipChange = _ref$skipChange === void 0 ? false : _ref$skipChange,\n      _ref$skipTimeout = _ref.skipTimeout,\n      skipTimeout = _ref$skipTimeout === void 0 ? false : _ref$skipTimeout;\n\n  return function (source$) {\n    return source$.pipe(catchError(ERR), skipChange ? tap(NOOP) : distinctUntilChanged(CMP), publishReplay(1), skipTimeout ? refCount() : refCountDelay(delay));\n  };\n};","map":null,"metadata":{},"sourceType":"module"}