{"ast":null,"code":"// Copyright 2017-2021 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { blake2AsU8a, xxhashAsU8a } from '@polkadot/util-crypto';\n\nvar DEFAULT_FN = function DEFAULT_FN(data) {\n  return xxhashAsU8a(data, 128);\n};\n\nvar HASHERS = {\n  Blake2_128: function Blake2_128(data) {\n    return (// eslint-disable-line camelcase\n      blake2AsU8a(data, 128)\n    );\n  },\n  Blake2_128Concat: function Blake2_128Concat(data) {\n    return (// eslint-disable-line camelcase\n      u8aConcat(blake2AsU8a(data, 128), u8aToU8a(data))\n    );\n  },\n  Blake2_256: function Blake2_256(data) {\n    return (// eslint-disable-line camelcase\n      blake2AsU8a(data, 256)\n    );\n  },\n  Identity: function Identity(data) {\n    return u8aToU8a(data);\n  },\n  Twox128: function Twox128(data) {\n    return xxhashAsU8a(data, 128);\n  },\n  Twox256: function Twox256(data) {\n    return xxhashAsU8a(data, 256);\n  },\n  Twox64Concat: function Twox64Concat(data) {\n    return u8aConcat(xxhashAsU8a(data, 64), u8aToU8a(data));\n  }\n};\n/** @internal */\n\nexport function getHasher(hasher) {\n  return HASHERS[hasher === null || hasher === void 0 ? void 0 : hasher.type] || DEFAULT_FN;\n}","map":null,"metadata":{},"sourceType":"module"}