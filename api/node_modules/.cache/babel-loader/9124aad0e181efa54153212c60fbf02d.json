{"ast":null,"code":"import _slicedToArray from \"/Users/michaelhuntington/Documents/GitHub/nft-collectibles-wallet/api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { of } from '@polkadot/x-rxjs';\nimport { map, startWith } from '@polkadot/x-rxjs/operators';\nimport { memo } from \"../util/index.js\";\nvar indicesCache = null;\n\nfunction queryAccounts(api) {\n  return api.query.indices.accounts.entries().pipe(map(function (entries) {\n    return entries.reduce(function (indexes, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          idOpt = _ref2[1];\n\n      if (idOpt.isSome) {\n        indexes[idOpt.unwrap()[0].toString()] = key.args[0];\n      }\n\n      return indexes;\n    }, {});\n  }));\n}\n/**\n * @name indexes\n * @returns Returns all the indexes on the system.\n * @description This is an unwieldly query since it loops through\n * all of the enumsets and returns all of the values found. This could be up to 32k depending\n * on the number of active accounts in the system\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.accounts.indexes((indexes) => {\n *   console.log('All existing AccountIndexes', indexes);\n * });\n * ```\n */\n\n\nexport function indexes(instanceId, api) {\n  return memo(instanceId, function () {\n    return indicesCache ? of(indicesCache) : (api.query.indices ? queryAccounts(api).pipe(startWith({})) : of({})).pipe(map(function (indices) {\n      indicesCache = indices;\n      return indices;\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}